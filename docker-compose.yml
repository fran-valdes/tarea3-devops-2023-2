version: '3'
services:
  movies-front:
    # completa esta seccion, lee el archivo README en la carpeta movies-front 
    build:
      context: ./movies-front/
      dockerfile: Dockerfile
    environment:
      - REACT_PORT
      - REACT_APP_API_URI
    container_name: movies-front
    ports:
      - "${REACT_PORT}:${REACT_PORT}"
    volumes:
      - ./movies-front:/usr/app
      - /usr/app/node_modules
    depends_on:
      - movies-api
    command: npm start

  movies-api:
    depends_on:
      - db
      # - flyway
    restart: always
    build:
      context: ./movies-api/
      dockerfile: Dockerfile
    container_name: movies-api
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_PORT
      - POSTGRES_SERVER
      - BIND_IP
      - BIND_PORT
    ports:
      - "${BIND_PORT}:${BIND_PORT}"
    command: /movies-api -b ${BIND_IP} -p ${BIND_PORT}

  db:
    image: postgres:15.3
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_SERVER
      - POSTGRES_PORT
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    expose:
      - ${POSTGRES_PORT}
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  flyway:
    image: flyway/flyway:latest
    container_name: migration_flyway
    volumes:
      - ./sql_migrations:/flyway/sql
    command: ["-url=jdbc:postgresql://${POSTGRES_SERVER}:${POSTGRES_PORT}/${POSTGRES_DB}", "-user=${POSTGRES_USER}", "-password=${POSTGRES_PASSWORD}", "migrate"]
    depends_on:
      - db
